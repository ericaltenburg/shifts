{
    "extends": ["eslint:recommended","plugin:react/recommended"],
    "parser": "babel-eslint",
    "env": {
      "browser": false,
      "node": true,
      "es6": true,
      "mocha": false
    },
    "parserOptions": {
        "sourceType": "module"
    },
    "rules": {
      "valid-jsdoc": ["error", {
        "requireReturn": true,
        "requireReturnType": true,
        "requireParamDescription": true,
        "requireReturnDescription": true,
        "preferType": {
          "String": "string",
          "object": "Object"
        }
      }],
      
      "no-var": 1,
      "no-eval": "error",
      "indent": ["error", 2],
      "quotes": ["error", "single"],
      "no-console": ["error", { "allow": ["warn", "info"] }],
      "space-before-function-paren": ["error", "never"],
      "padded-blocks": ["error", "always"],
      "prefer-arrow-callback": [0, { "allowNamedFunctions": true }],
      "func-names": ["error", "never"],
      "no-use-before-define": [
        "error", {
          "functions": true,
          "classes": true
        }
      ],
      "max-nested-callbacks": [
        "error",
        5
      ]
    },
    "settings": {
      "react": {
        "createClass": "createReactClass", // Regex for Component Factory to use,
                                           // default to "createReactClass"
        "pragma": "React",  // Pragma to use, default to "React"
        "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
        "version": "detect", // React version. "detect" automatically picks the version you have installed.
                             // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                             // default to latest and warns if missing
                             // It will default to "detect" in the future
        "flowVersion": "0.53" // Flow version
      },
      "propWrapperFunctions": [
          // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
          "forbidExtraProps",
          {"property": "freeze", "object": "Object"},
          {"property": "myFavoriteWrapper"}
      ],
      "linkComponents": [
        // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
        "Hyperlink",
        {"name": "Link", "linkAttribute": "to"}
      ]
    }
  }